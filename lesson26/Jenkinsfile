pipeline {
    agent none
    stages {
        stage('Build and Deploy') {
            parallel {
                stage('Hello World') {
                    when {
                        changeset "lesson26/hello-world/**"
                    }
                    agent {
                        docker {
                            image 'maven:3.9.2'
                            args '-v /root/.m2:/root/.m2'
                        }
                    }
                    stages {
                        stage('Build Hello World') {
                            steps {
                                dir('lesson26/hello-world') {
                                    sh 'mvn -B -DskipTests clean package'
                                }
                            }
                        }
                        stage('Test Hello World') {
                            steps {
                                dir('lesson26/hello-world') {
                                    sh 'mvn test'
                                }
                            }
                        }
                        stage('Deploy Hello World') {
                            steps {
                                dir('lesson26/hello-world') {
                                    sh 'java -jar target/hello-world-1.0-SNAPSHOT.jar'
                                }
                            }
                        }
                    }
                }
                stage('Hello Jenkins') {
                    when {
                        changeset "lesson26/hello-jenkins/**"
                    }
                    agent {
                        docker {
                            image 'maven:3.9.2'
                            args '-v /root/.m2:/root/.m2'
                        }
                    }
                    stages {
                        stage('Build Hello Jenkins') {
                            steps {
                                dir('lesson26/hello-jenkins') {
                                    sh 'mvn -B -DskipTests clean package'
                                }
                            }
                        }
                        stage('Test Hello Jenkins') {
                            steps {
                                dir('lesson26/hello-jenkins') {
                                    sh 'mvn test'
                                }
                            }
                        }
                        stage('Deploy Hello Jenkins') {
                            steps {
                                dir('lesson26/hello-jenkins') {
                                    sh 'java -jar target/hello-jenkins-1.0-SNAPSHOT.jar'
                                }
                            }
                        }
                    }
                }
                stage('Hello Devops') {
                    when {
                        changeset "lesson26/hello-devops/**"
                    }
                    agent {
                        docker {
                            image 'maven:3.9.2'
                            args '-v /root/.m2:/root/.m2'
                        }
                    }
                    stages {
                        stage('Build Hello Devops') {
                            steps {
                                dir('lesson26/hello-devops') {
                                    sh 'mvn -B -DskipTests clean package'
                                }
                            }
                        }
                        stage('Test Hello Devops') {
                            steps {
                                dir('lesson26/hello-devops') {
                                    sh 'mvn test'
                                }
                            }
                        }
                        stage('Deploy Hello Devops') {
                            steps {
                                dir('lesson26/hello-devops') {
                                    sh 'java -jar target/hello-devops-1.0-SNAPSHOT.jar'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
