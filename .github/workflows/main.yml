name: CI Pipeline lesson28

on:
  push:
    branches:
      - main  # Workflow будет запускаться при пушах в ветку main
  pull_request:
    branches:
      - main  # Workflow будет запускаться при pull request в ветку main
  workflow_dispatch:  # Возможность ручного запуска

jobs:
  build:
    name: Build, Test, and Create Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [hello-world, hello-jenkins, hello-devops]  # Список приложений в lesson28
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17  # Установка JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Install Maven 3.9.2 manually  # Ручная установка Maven 3.9.2
        run: |
          MAVEN_VERSION=3.9.2
          wget https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
          tar -xvzf apache-maven-$MAVEN_VERSION-bin.tar.gz
          sudo mv apache-maven-$MAVEN_VERSION /opt/maven
          sudo rm -f /usr/bin/mvn
          sudo ln -s /opt/maven/bin/mvn /usr/bin/mvn
          mvn -version

      - name: Build with Maven  # Сборка проекта с помощью Maven
        run: mvn -B package --file lesson28/${{ matrix.app }}/pom.xml

      - name: List target directory after Maven build  # Проверка содержимого директории target
        run: ls -l lesson28/${{ matrix.app }}/target

      - name: Generate Dockerfile  # Генерация Dockerfile автоматически
        run: |
          echo "FROM openjdk:17-jdk-alpine" > lesson28/${{ matrix.app }}/Dockerfile
          echo "WORKDIR /app" >> lesson28/${{ matrix.app }}/Dockerfile
          echo "COPY target/*.jar app.jar" >> lesson28/${{ matrix.app }}/Dockerfile
          echo "EXPOSE 8080" >> lesson28/${{ matrix.app }}/Dockerfile
          echo 'ENTRYPOINT ["java", "-jar", "/app/app.jar"]' >> lesson28/${{ matrix.app }}/Dockerfile
        shell: bash

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        app: [hello-world, hello-jenkins, hello-devops]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx  # Настройка Buildx
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap

      - name: Build and Push Docker image  # Сборка и загрузка Docker-образа
        run: |
          docker buildx build --platform linux/amd64 -t ghcr.io/${{ github.repository }}/{{ matrix.app }}:latest ./lesson28/${{ matrix.app }} --push

      - name: Log in to GitHub Container Registry  # Вход в GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
